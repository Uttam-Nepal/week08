name: Backend CI - Test, Build and Push Images to ACR

on:
  pull_request:                        # IMPROVEMENT: Add PR validation for dev branch
    branches: [ dev ]
    paths: [ 'backend/**', 'k8s/**', '.github/workflows/backend_ci.yml' ]
  push:
    branches: [ main ]                 # IMPROVEMENT: Keep main for production builds
    paths: [ 'backend/**', 'k8s/**', '.github/workflows/backend_ci.yml' ]
  workflow_dispatch:

env:
  ACR_NAME: ${{ secrets.ACR_NAME }}    # IMPROVEMENT: Separate ACR_NAME vs login server
  ACR_LOGIN_SERVER: ${{ secrets.AZURE_CONTAINER_REGISTRY }}
  IMAGE_TAG: ${{ github.sha }}-${{ github.run_id }}

concurrency:
  group: backend-ci-${{ github.ref }}  # IMPROVEMENT: Cancel redundant runs
  cancel-in-progress: true

jobs:
  test_and_lint_backends:
    runs-on: ubuntu-latest
    services:
      product_db:
        image: postgres:15
        env: { POSTGRES_USER: postgres, POSTGRES_PASSWORD: postgres, POSTGRES_DB: products }
        ports: [ "5432:5432" ]
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s --health-timeout 5s --health-retries 5
      order_db:
        image: postgres:15
        env: { POSTGRES_USER: postgres, POSTGRES_PASSWORD: postgres, POSTGRES_DB: orders }
        ports: [ "5433:5432" ]
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'
      - run: pip install -r backend/product_service/requirements.txt && pip install -r backend/order_service/requirements.txt
      - run: pytest tests --maxfail=1 --disable-warnings -q
        working-directory: backend/product_service
      - run: pytest tests --maxfail=1 --disable-warnings -q
        working-directory: backend/order_service

  build_and_push_images:
    runs-on: ubuntu-latest
    needs: test_and_lint_backends
    strategy:
      matrix:
        service: [ product_service, order_service ]
    steps:
      - uses: actions/checkout@v4
      - uses: azure/login@v1
        with: { creds: ${{ secrets.AZURE_CREDENTIALS }} }
      - run: az acr login --name ${{ env.ACR_NAME }}
      - name: Build & Push ${{ matrix.service }}
        run: |
          docker build -t ${{ env.ACR_LOGIN_SERVER }}/${{ matrix.service }}:${{ env.IMAGE_TAG }} ./backend/${{ matrix.service }}/
          docker push ${{ env.ACR_LOGIN_SERVER }}/${{ matrix.service }}:${{ env.IMAGE_TAG }}
          docker tag  ${{ env.ACR_LOGIN_SERVER }}/${{ matrix.service }}:${{ env.IMAGE_TAG }} ${{ env.ACR_LOGIN_SERVER }}/${{ matrix.service }}:latest
          docker push ${{ env.ACR_LOGIN_SERVER }}/${{ matrix.service }}:latest
      - run: az logout
